---
- hosts: all
  connection: chroot
  tasks:
    - name: find netplan files ubuntu
      find:
        paths: /etc/netplan
        patterns: "*"
      register: files_to_delete
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: delete netplan files ubuntu
      file:
        path: "{{ item.path }}"
        state: absent
      with_items: "{{ files_to_delete.files }}"
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: delete interface files ubuntu
      file:
        path: /etc/network/interfaces
        state: absent
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: check if /etc/resolv.conf exists in chroot
      stat:
        path: /etc/resolv.conf
      register: stat_result

    - name: remove immutable from /etc/resolv.conf
      file:
        path: /etc/resolv.conf
        attributes: '-i'
      when: stat_result.stat.exists

    - name: move /etc/resolv.conf temporarily
      command:
        cmd: mv /etc/resolv.conf /etc/resolv.conf.bak
      when: stat_result.stat.exists

    - name: create /etc/resolv.conf
      copy:
        src: resolv.conf
        dest: /etc/resolv.conf

    - name: update /etc/apt/sources.list to old. if 10.04
      copy:
        src: apt/sources.list.10.04
        dest: /etc/apt/sources.list
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == "10.04"

    - name: update repo if ubuntu
      shell: apt-get update
      ignore_errors: true
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: update cloud-init if ubuntu
      apt:
        name: cloud-init
        state: latest
        force: yes
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: update cloud-init if centos
      yum:
        name: cloud-init
        state: latest
        update_cache: yes
      when: ansible_distribution == 'CentOS'

    - name: run cloud-init init if old OS
      shell: cloud-init init
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_version is version('16.04', '<')

    - name: run cloud-init clean
      shell: cloud-init clean
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_version is version('14.04', '>')

    - name: preserve hostname
      replace:
        path: /etc/cloud/cloud.cfg
        regexp: "^preserve_hostname: false$"
        replace: "preserve_hostname: true"

    - name: reset resolv.conf
      command:
        cmd: mv /etc/resolv.conf.bak /etc/resolv.conf
      when: stat_result.stat.exists
