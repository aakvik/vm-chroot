#!/bin/bash

LOG_FILE="vm-chroot.log"

log() {
	local message="$1"
	local timestamp=$(date +"%Y-%m-%d %H:%M:%S")

    	echo "$timestamp - $message"

    	echo "$timestamp - $message" >> "$LOG_FILE"
}

check_exit_status() {
	local exit_code="$1"
	local expected_code="$2"

	if [ "$exit_code" -eq "$expected_code" ]; then
		log "Success: Got expected exit status code $expected_code"
        	return 0
	else
		log "Error: Expected exit status code $expected_code, but received $exit_code"
        	return 1
	fi

}

mount_chroot() {
    	log "mounting chroot: "
    	
    	local rootpath=$(blkid|grep mapper|grep root| awk '{print $1}' | sed -e 's/:$//')

	[[ -z "$rootpath" ]] && { echo "Could not find root path" ; exit 1; }

    	/usr/bin/mount $rootpath /mnt &&

    	for i in dev proc sys run
    	do
    		/usr/bin/mount --bind /$i /mnt/$i
    	done
    	
    	check_exit_status "$?" 0 || return 1
    	log "mounted chroot successfully"
}

update_chroot() {
	log "updating chroot: "

	apt-get install ansible -y &&
	/usr/bin/ansible-playbook -i /mnt, playbook.yaml

    	check_exit_status "$?" 0 || return 1
    	log "updated chroot successfully"
}

unmount_chroot() {
	log "unmounting chroot: "

	for i in dev proc sys run
	do
        	/usr/bin/umount /mnt/$i
	done &&

	/usr/bin/umount /mnt || /usr/bin/umount -l /mnt

    	check_exit_status "$?" 0 || return 1
    	log "unmounted chroot successfully"
}


main() {
	log "starting volume update..."
	
	mount_chroot || { echo "Error in mount_chroot"; exit 1; }
	update_chroot || { echo "Error in update_chroot"; exit 1; }
	unmount_chroot || { echo "Error in unmount_chroot"; exit 1; }
	
	log "volume update completed successfully"
}

main
