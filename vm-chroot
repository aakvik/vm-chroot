#!/bin/bash

echo $$ >/tmp/chroot.pid

LOG_FILE="/var/log/chroot.log"

>"$LOG_FILE"

log() {
	local message="$1"
	local timestamp=$(date +"%Y-%m-%d %H:%M:%S")

	echo "$timestamp - $message" | tee -a "$LOG_FILE"
}

check_exit_status() {
	local exit_code="$1"
	local expected_code="$2"

	if [ "$exit_code" -eq "$expected_code" ]; then
		log "OK: Got expected exit status code $expected_code"
		return 0
	else
		log "Err: Expected exit status code $expected_code, but received $exit_code"
		return 1
	fi
}

unmount_chroot() {
	log "unmounting chroot: "

	for i in dev proc sys; do
		/usr/bin/umount /mnt/$i
	done &&
		/usr/bin/umount /mnt || /usr/bin/umount -l /mnt &&
		vgchange -an

	check_exit_status "$?" 0 || return 1
	log "Chroot unmount completed"
}

mount_chroot() {
	log "Mounting chroot: "

	local tpath=$(cat /tmp/target_disk)
	local rootpath=""

	vgchange -ay

	lvscan_output=$(lvscan)
	if echo "$lvscan_output" | grep -q "ACTIVE"; then
		rootpath=$(lsblk -b -p -l -o NAME,SIZE,TYPE $tpath | grep lvm | sort -k2 -n -r | head -n1 | awk '{print $1}')
	else
		rootpath=$(lsblk -b -p -l -o NAME,SIZE,TYPE $tpath | grep -E "vd*.[1-9][0-9]{0,2}" | sort -k2 -n -r | head -n1 | awk '{print $1}')
		[[ -z "$rootpath" ]] && {
			log "Could not find root path"
			return 1
		}
	fi

	/usr/bin/mount "$rootpath" /mnt &&
		for i in dev proc sys; do
			/usr/bin/mount --bind "/$i" "/mnt/$i"
		done

	check_exit_status "$?" 0 || {
		unmount_chroot
		return 1
	}
	log "Chroot mount completed"
}

update_chroot() {
	local parent_script_path=$(dirname "$0")
	log "updating chroot: "

	apt-get install ansible -y &&
		/usr/bin/ansible-playbook -i /mnt, $parent_script_path/playbook.yaml

	check_exit_status "$?" 0 || {
		unmount_chroot
		return 1
	}
	log "Chroot update completed"
}

main() {
	log "starting volume update..."

	[[ "$1" == "241865" ]] && ./overrides/part_extend /dev/vdb /dev/vdb1 /dev/hwraid/root || {
    log "Failed to extend partition"
    exit 1
  }

	mount_chroot || {
		log "Error in mount_chroot"
		exit 1
	}
	update_chroot || {
		log "Error in update_chroot"
		exit 1
	}
	unmount_chroot || {
		log "Error in unmount_chroot"
		exit 1
	}

	log "volume update completed successfully"
}

main
